exports[`code beautifier > beautifies code 1`] = `
{
  "code": 0,
  "stderr": "Fetching source code...\\nBeautifying source code...\\n",
  "stdout": "(function() {\\n    const o = document.title;\\n    console.log(\`\\\\t\`, o);\\n                      ^\\n    window.杨 = o;\\n})();\\n"
}
`;

exports[`code beautifier > fail if the code has a syntax error 1`] = `
{
  "code": 1,
  "stderr": "Fetching source code...\\nBeautifying source code...\\nFailed to parse response: SyntaxError: Unexpected token: operator (<)\\n",
  "stdout": ""
}
`;

exports[`context options 1`] = `
{
  "code": 0,
  "stderr": "Fetching source code...\\nBeautifying source code...\\n",
  "stdout": "    const o = document.title;\\n    console.log(\`\\\\t\`, o);\\n                      ^\\n    window.杨 = o;\\n"
}
`;

exports[`context options 2`] = `
{
  "code": 0,
  "stderr": "Fetching source code...\\nBeautifying source code...\\n",
  "stdout": "    console.log(\`\\\\t\`, o);\\n                      ^\\n"
}
`;

exports[`context options 3`] = `
{
  "code": 0,
  "stderr": "Fetching source code...\\nBeautifying source code...\\n",
  "stdout": "(function() {\\n    const o = document.title;\\n    console.log(\`\\\\t\`, o);\\n                      ^\\n"
}
`;

exports[`context options 4`] = `
{
  "code": 0,
  "stderr": "Fetching source code...\\nBeautifying source code...\\n",
  "stdout": "    console.log(\`\\\\t\`, o);\\n                      ^\\n    window.杨 = o;\\n})();\\n"
}
`;

exports[`fails if no argument is given 1`] = `
{
  "code": 0,
  "stderr": "",
  "stdout": "Usage: in-situ [options] <URL:LINE:COLUMN>\\n\\nDownload, beautify and print lines from a minified JavaScript source\\n\\nOptions:\\n  -A, --after-context <num>   print <num> lines of trailing context after the selected line\\n  -B, --before-context <num>  print <num> lines of leading context before the selected line\\n  -C, --context <num>         print <num> lines of leading and trailing context surrounding the selected line\\n  --no-source-map             don't try to use a source map\\n  -d, --debug                 output extra debugging\\n  -V, --version               output the version number\\n  -h, --help                  output usage information\\n"
}
`;

exports[`source map retrieval > fallback to beautify if the source map is not found 1`] = `
{
  "code": 0,
  "stderr": "Fetching source code...\\nFetching source maps...\\nFailed to fetch source map: Error: Failed to fetch: Not found\\nBeautifying source code...\\n",
  "stdout": "(function() {\\n    const o = document.title;\\n    console.log(\`\\\\t\`, o);\\n    window.杨 = o;\\n                ^\\n})();\\n"
}
`;

exports[`source map retrieval > no source map option 1`] = `
{
  "code": 0,
  "stderr": "Fetching source code...\\nBeautifying source code...\\n",
  "stdout": "(function() {\\n    const o = document.title;\\n    console.log(\`\\\\t\`, o);\\n    window.杨 = o;\\n                ^\\n})();\\n"
}
`;

exports[`source map retrieval > use the source map from a SourceMap header 1`] = `
{
  "code": 0,
  "stderr": "Fetching source code...\\nFetching source maps...\\n",
  "stdout": "File: index.js\\nconst title = document.title\\nconsole.log(\`\\t\`, title)\\nwindow.杨 = title\\n            ^\\n\\n"
}
`;

exports[`source map retrieval > use the source map from a X-SourceMap header 1`] = `
{
  "code": 0,
  "stderr": "Fetching source code...\\nFetching source maps...\\n",
  "stdout": "File: index.js\\nconst title = document.title\\nconsole.log(\`\\t\`, title)\\nwindow.杨 = title\\n            ^\\n\\n"
}
`;

exports[`source map retrieval > use the source map from a data-uri 1`] = `
{
  "code": 0,
  "stderr": "Fetching source code...\\n",
  "stdout": "File: index.js\\nconst title = document.title\\nconsole.log(\`\\t\`, title)\\nwindow.杨 = title\\n            ^\\n\\n"
}
`;

exports[`source map retrieval > use the source map from a sourcemap comment 1`] = `
{
  "code": 0,
  "stderr": "Fetching source code...\\nFetching source maps...\\n",
  "stdout": "File: index.js\\nconst title = document.title\\nconsole.log(\`\\t\`, title)\\nwindow.杨 = title\\n            ^\\n\\n"
}
`;
